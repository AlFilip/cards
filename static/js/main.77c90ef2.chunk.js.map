{"version":3,"sources":["common/Components/Error/Error404.module.css","common/Components/SuperButton/SuperButton.module.css","common/Components/SuperCheckbox/SuperCheckbox.module.css","Components/Header/Header.module.css","common/Components/SuperButton/SuperButton.tsx","common/Components/SuperCheckbox/SuperCheckbox.tsx","common/Components/SuperInputText/SuperInputText.tsx","Components/Test.tsx","Components/auth/ChangePassword/ChangePassword.tsx","Components/auth/Login/Login.tsx","Components/auth/Profile/Profile.tsx","Components/auth/RecoverPassword/RecoverPassword.tsx","Components/auth/Registration/Registration.tsx","common/Components/Error/404girl.jpg","common/Components/Error/Error404.tsx","common/Components/MyRoutes/MyRoutes.tsx","Components/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/authReducer.ts","redux/store.ts","index.tsx","common/Components/SuperInputText/SuperInputText.module.css"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","btn","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","superInputParent","value","key","placeholder","Test","ChangePassword","Login","Profile","RecoverPassword","Registration","Error404","error404","num404","src","img","alt","content404","MyRoutes","path","element","Header","useState","isHover","setIsHover","toggleHover","headerClassName","header","hovered","onMouseEnter","onMouseLeave","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","state","action","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77c90ef2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__3Pt97\",\"num404\":\"Error404_num404__hEscJ\",\"content404\":\"Error404_content404__3VR5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__ZGyYb\",\"red\":\"SuperButton_red__1CEPb\",\"active\":\"SuperButton_active__3sNv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3pc81\",\"spanClassName\":\"SuperCheckbox_spanClassName__2LUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xCPKL\",\"hovered\":\"Header_hovered__2aF4N\",\"activeLink\":\"Header_activeLink__2Y7xo\",\"dots\":\"Header_dots__M1idO\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : ''} ${className? className : ''} ${s.btn}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error? s.error : ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className:''} ${s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.superInputParent}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Enter here'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport SuperButton from '../common/Components/SuperButton/SuperButton'\r\nimport SuperCheckbox from '../common/Components/SuperCheckbox/SuperCheckbox'\r\nimport SuperInputText from '../common/Components/SuperInputText/SuperInputText'\r\n\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton>Button</SuperButton>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const ChangePassword = () => {\r\n    return (\r\n        <div>\r\n            ChangePassword\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const RecoverPassword = () => {\r\n    return (\r\n        <div>\r\n            RecoverPassword\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/404girl.449c1390.jpg\";","import React from 'react'\r\nimport s from './Error404.module.css'\r\nimport img from './404girl.jpg'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error404}>\r\n            <span className={s.num404}>404!</span>\r\n            <img src={img} alt=\"sad girl\"/>\r\n            <div className={s.content404}>\r\n                <div>Page not found!</div>\r\n                <div>But don't worry, and click the \"Back\" button of your browser</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import { Route, Routes } from 'react-router-dom'\r\nimport { Test } from '../../../Components/Test'\r\nimport { ChangePassword } from '../../../Components/auth/ChangePassword/ChangePassword'\r\nimport { Login } from '../../../Components/auth/Login/Login'\r\nimport { Profile } from '../../../Components/auth/Profile/Profile'\r\nimport { RecoverPassword } from '../../../Components/auth/RecoverPassword/RecoverPassword'\r\nimport { Registration } from '../../../Components/auth/Registration/Registration'\r\nimport React from 'react'\r\nimport Error404 from '../Error/Error404'\r\n\r\n\r\nexport const MyRoutes = () => {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={ <Test/> }/>\r\n\r\n            <Route path=\"/change-password\" element={ <ChangePassword/> }/>\r\n            <Route path=\"/login\" element={ <Login/> }/>\r\n            <Route path=\"/profile\" element={ <Profile/> }/>\r\n            <Route path=\"/recover\" element={ <RecoverPassword/> }/>\r\n            <Route path=\"/registration\" element={ <Registration/> }/>\r\n\r\n            <Route path=\"*\" element={ <Error404/> }/>\r\n        </Routes>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from \"./Header.module.css\"\r\n\r\n\r\nfunction Header() {\r\n    const [isHover, setIsHover] = useState<boolean>( false )\r\n    const toggleHover = () => setIsHover( !isHover )\r\n    const headerClassName = `${ s.header } ${ isHover ? s.hovered : '' }`\r\n\r\n    return (\r\n        <div className={ headerClassName } onMouseEnter={ toggleHover } onMouseLeave={ toggleHover }>\r\n            <NavLink to={ '/' } >Test</NavLink>\r\n            <NavLink to={ 'change-password' } >change-password</NavLink>\r\n            <NavLink to={ 'login' }>login</NavLink>\r\n            <NavLink to={ 'profile' }>profile</NavLink>\r\n            <NavLink to={ 'recover' }>recover</NavLink>\r\n            <NavLink to={ 'registration' }>registration</NavLink>\r\n            <NavLink to={ '404' }>Error404</NavLink>\r\n            {/*<span className={ s.dots }>&#8285;</span>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\nimport './App.css'\nimport { MyRoutes } from './common/Components/MyRoutes/MyRoutes'\nimport Header from './Components/Header/Header'\n\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <MyRoutes/>\n        </>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type authStateType = typeof initState\r\n\r\nconst initState = {}\r\n\r\nconst authReducer = (state = initState, action: any): authStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport auth from './authReducer'\r\n\r\n\r\nconst rootReducer = combineReducers( {\r\n    auth,\r\n} )\r\n\r\nexport const store = createStore( rootReducer, applyMiddleware( thunk ) )\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={ store }>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById( 'root' ),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputParent\":\"SuperInputText_superInputParent__2O-9q\",\"superInput\":\"SuperInputText_superInput__D-tqS\",\"errorInput\":\"SuperInputText_errorInput__3ASi3\",\"error\":\"SuperInputText_error__NR5bs\",\"show\":\"SuperInputText_show__JP_Ng\"};"],"sourceRoot":""}